/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BruteForcePartitioningDialog.java
 *
 * Created on 13-Feb-2012, 2:59:02 PM
 */
package ca.ubc.magic.profiler.partitioning.view;

import ca.ubc.magic.profiler.dist.model.HostModel;
import ca.ubc.magic.profiler.dist.model.ModuleModel;
import ca.ubc.magic.profiler.partitioning.control.alg.PartitionerFactory;
import ca.ubc.magic.profiler.partitioning.control.alg.PartitionerFactory.PartitionerType;

/**
 *
 * @author nima
 */
public class BruteForcePartitioningDialog extends javax.swing.JDialog {

    /** Creates new form BruteForcePartitioningDialog */
    public BruteForcePartitioningDialog(java.awt.Frame parent, boolean modal,
            final ModuleModel moduleModel, final HostModel hostModel) {
        super(parent, modal);
        initComponents();
        initDynamicComponents();
        
        mModuleModel = moduleModel;
        mHostModel = hostModel;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        partitioningAlgCombo = new javax.swing.JComboBox();
        partitioningAlgLabel = new javax.swing.JLabel();
        runButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        algorithmExecutionTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        partitioningAlgCombo.setName("partitioningAlgCombo"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ca.ubc.magic.profiler.simulator.view.DistSimulatorApp.class).getContext().getResourceMap(BruteForcePartitioningDialog.class);
        partitioningAlgLabel.setText(resourceMap.getString("partitioningAlgLabel.text")); // NOI18N
        partitioningAlgLabel.setName("partitioningAlgLabel"); // NOI18N

        runButton.setText(resourceMap.getString("runButton.text")); // NOI18N
        runButton.setName("runButton"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        algorithmExecutionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Algorithm", "Cut SIze"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        algorithmExecutionTable.setName("algorithmExecutionTable"); // NOI18N
        jScrollPane1.setViewportView(algorithmExecutionTable);
        algorithmExecutionTable.getColumnModel().getColumn(0).setMinWidth(50);
        algorithmExecutionTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        algorithmExecutionTable.getColumnModel().getColumn(0).setMaxWidth(50);
        algorithmExecutionTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("algorithmExecutionTable.columnModel.title0")); // NOI18N
        algorithmExecutionTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("algorithmExecutionTable.columnModel.title1")); // NOI18N
        algorithmExecutionTable.getColumnModel().getColumn(2).setMinWidth(100);
        algorithmExecutionTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        algorithmExecutionTable.getColumnModel().getColumn(2).setMaxWidth(100);
        algorithmExecutionTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("algorithmExecutionTable.columnModel.title2")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(partitioningAlgLabel)
                        .addGap(18, 18, 18)
                        .addComponent(partitioningAlgCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(partitioningAlgLabel)
                    .addComponent(partitioningAlgCombo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initDynamicComponents(){
         // Initializing the list of partitioner algorithms 
        for (PartitionerType ptype : PartitionerFactory.PartitionerType.values()){
            // initializing the partitioning combo box
            partitioningAlgCombo.addItem(ptype.getText());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable algorithmExecutionTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox partitioningAlgCombo;
    private javax.swing.JLabel partitioningAlgLabel;
    private javax.swing.JButton runButton;
    // End of variables declaration//GEN-END:variables

    private ModuleModel mModuleModel;
    private HostModel   mHostModel;
}
